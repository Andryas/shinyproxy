proxy:
  title: Shinyproxy em produção
  landing-page: /
  template-path: ./templates
  heartbeat-rate: 10000
  heartbeat-timeout: 50000
  bind-address: 0.0.0.0
  container-wait-time: 60000
  port: 8080

  # authentication: openid # use openid auth framework
  # openid:
  #   roles-claim: cognito:groups # use the groups value passed by AWS cognito to identify user groups
  #   auth-url:  https://{cognito_domain_prefix}.auth.{region}.amazoncognito.com/oauth2/authorize
  #   token-url:  https://{cognito_domain_prefix}.auth.{region}.amazoncognito.com/oauth2/token
  #   jwks-url:  https://cognito-idp.{region}.amazonaws.com/{userPoolId}/.well-known/jwks.json
  #   logout-url:  https://{cognito_domain_prefix}.auth.{region}.amazoncognito.com/logout?client_id={client_id}&logout_uri={your_host_url}
  #   client-id:   get this from AWS Cognito user pool management page
  #   client-secret:   get this from AWS Cognito user pool management page

  authentication: openid
  openid:
    roles-claim: cognito:groups # use the groups value passed by AWS cognito to identify user groups
    auth-url: https://appshiny.auth.sa-east-1.amazoncognito.com/oauth2/authorize
    token-url: https://appshiny.auth.sa-east-1.amazoncognito.com/oauth2/token
    jwks-url: https://cognito-idp.sa-east-1.amazonaws.com/sa-east-1_ibK4IPNFm/.well-known/jwks.json
    logout-url: https://appshiny.auth.sa-east-1.amazoncognito.com/login?response_type=code&client_id=2nmvaj52d5vm2qg9tournfiek8&scope=openid%20email&state=FryoCgQS91Y6Qd6k3z3DXdgxxFcAwKZ1vnsHSz8Xaus%3D&redirect_uri=https://cleber.shortcutai.com/login/oauth2/code/shinyproxy&nonce=JjzUJIYI9DfxBustdXFKWNTVV2MwwY3GP5VwIeRg4WE
    client-id: 2nmvaj52d5vm2qg9tournfiek8 # get this from AWS Cognito user pool management page
    client-secret: 10b13djmps5ah6gt525jefnofr1dk68j01g8f112budkdafqjbce # get this from AWS Cognito user pool management pag

  docker:
    internal-networking: true
    container-network: mynet
  
  specs:
    - id: distshiny
      display-name: Distribuições de Probabilidade
      container-cmd: ["R", "-e", "shiny::runApp('/root/app', port = 3838, host = '0.0.0.0')"]
      container-image: aw/distshiny
      access-groups: [everybody, admins]
      container-network: "${proxy.docker.container-network}"
    - id: bloodbanks
      display-name: Localizando bancos de sangue na Índia
      container-cmd: ["R", "-e", "shiny::runApp('/root/app', port = 3838, host = '0.0.0.0')"]
      container-image: aw/bloodbanks
      container-network: "${proxy.docker.container-network}"
      access-groups: [admins]
 
server:
  forward-headers-strategy: native


